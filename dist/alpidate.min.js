(()=>{function v(e,r){let i={$invalid:!1};return r.forEach(c=>{let[l,t]=c.split(":"),s=!1;switch(l){case"required":s=e===null||e===""||e===void 0||Array.isArray(e)&&e.length===0;break;case"array":s=!Array.isArray(e);break;case"min":(typeof e=="string"||Array.isArray(e))&&(s=e.length<Number(t));break;case"max":(typeof e=="string"||Array.isArray(e))&&(s=e.length>Number(t));break;case"numeric":s=isNaN(e);break;case"email":s=!/^\w+([.-]?\w+)*@\w+([.-]?\w+)*(\.\w{2,3})+$/.test(e);break;case"regex":try{let a=t?new RegExp(t):null;s=a?!a.test(e):!0}catch{s=!0}break}i[l]=s,s&&(i.$invalid=!0)}),i}function b(e){let r={};for(let i in e.validations)if(i.includes("*")){let l=i.split(".")[0];(e[l]||[]).forEach((s,a)=>{let n=i.replace("*",a);r[n]=e.validations[i]})}else r[i]=e.validations[i];return r}function p(e){let r=b(e);for(let i in r)e.validate(i),e.$watch(i,()=>e.validate(i));return e}function x(e){e.magic("validation",()=>r=>{r.$v={},r.$v.$touch=!1,r.$v.$invalid=!0,r.validate=(i=null)=>{let c=b(r),l=i?[i]:Object.keys(c);i||(r.$v.$touch=!0),l.forEach(t=>{let s=c[t],a=t.split("."),n=r.$v,o=r;a.forEach((f,$)=>{if(!isNaN(Number(f))){o=o[f];return}n[f]||(n[f]={$invalid:!1}),n=n[f],o=o[f]??o[f]}),Object.assign(n,v(o,s)),Array.isArray(o)&&Object.keys(r.validations).find($=>$.includes("*")&&$.startsWith(a[0]))&&(n.each=o.map(($,d)=>{let h={};return Object.keys(r.validations).filter(u=>u.startsWith(a[0]+".*")).map(u=>({fieldName:u.split(".").slice(-1)[0],rules:r.validations[u]})).forEach(u=>{h[u.fieldName]=v($[u.fieldName],u.rules)}),h}),n.$invalid=n.each.some($=>Object.values($).some(d=>d.$invalid)))})},r.$v.reset=()=>r.$v.$touch=!1,r=p(r),r.$watch("$v",()=>{r.$v.$invalid=Object.keys(r.$v).some(i=>{if(i.startsWith("$"))return!1;let c=r.$v[i];return c.$invalid?!0:c.each?c.each.some(l=>Object.values(l).some(t=>t.$invalid)):!1})})})}})();
